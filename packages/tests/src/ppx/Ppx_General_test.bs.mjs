// Generated by ReScript, PLEASE EDIT WITH CARE

import Ava from "ava";
import * as TestUtils from "../utils/TestUtils.bs.mjs";
import * as S$RescriptStruct from "rescript-struct/src/S.bs.mjs";

Ava("Creates struct with the name struct from t type", (function (t) {
        TestUtils.assertEqualStructs(t, S$RescriptStruct.string, S$RescriptStruct.string, undefined, undefined);
      }));

Ava("Creates struct with the type name and struct at the for non t types", (function (t) {
        TestUtils.assertEqualStructs(t, S$RescriptStruct.$$int, S$RescriptStruct.$$int, undefined, undefined);
      }));

var reusedTypesStruct = S$RescriptStruct.tuple(function (s) {
      return [
              s.i(0, S$RescriptStruct.string),
              s.i(1, S$RescriptStruct.$$int),
              s.i(2, S$RescriptStruct.bool),
              s.i(3, S$RescriptStruct.$$float)
            ];
    });

Ava("Can reuse structs from other types", (function (t) {
        TestUtils.assertEqualStructs(t, reusedTypesStruct, S$RescriptStruct.tuple(function (s) {
                  return [
                          s.i(0, S$RescriptStruct.string),
                          s.i(1, S$RescriptStruct.$$int),
                          s.i(2, S$RescriptStruct.bool),
                          s.i(3, S$RescriptStruct.$$float)
                        ];
                }), undefined, undefined);
      }));

var struct = S$RescriptStruct.string;

var fooStruct = S$RescriptStruct.$$int;

export {
  struct ,
  fooStruct ,
  reusedTypesStruct ,
}
/*  Not a pure module */
