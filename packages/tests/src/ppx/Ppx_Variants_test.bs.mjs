// Generated by ReScript, PLEASE EDIT WITH CARE

import * as U from "../utils/U.bs.mjs";
import Ava from "ava";
import * as S$RescriptSchema from "rescript-schema/src/S.bs.mjs";

var variantSchema = S$RescriptSchema.union([
      S$RescriptSchema.literal("One"),
      S$RescriptSchema.literal("Two")
    ]);

Ava("Variant", (function (t) {
        U.assertEqualSchemas(t, variantSchema, S$RescriptSchema.union([
                  S$RescriptSchema.literal("One"),
                  S$RescriptSchema.literal("Two")
                ]), undefined);
      }));

var variantWithSingleItemSchema = S$RescriptSchema.literal("Single");

Ava("Variant with single item becomes a literal schema of the item", (function (t) {
        U.assertEqualSchemas(t, variantWithSingleItemSchema, S$RescriptSchema.literal("Single"), undefined);
      }));

var variantWithAliasSchema = S$RescriptSchema.union([
      S$RescriptSchema.literal("하나"),
      S$RescriptSchema.literal("Two")
    ]);

Ava("Variant with partial @as usage", (function (t) {
        U.assertEqualSchemas(t, variantWithAliasSchema, S$RescriptSchema.union([
                  S$RescriptSchema.literal("하나"),
                  S$RescriptSchema.literal("Two")
                ]), undefined);
      }));

export {
  variantSchema ,
  variantWithSingleItemSchema ,
  variantWithAliasSchema ,
}
/* variantSchema Not a pure module */
