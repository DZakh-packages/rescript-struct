// Generated by ReScript, PLEASE EDIT WITH CARE

import * as U from "../utils/U.bs.mjs";
import Ava from "ava";
import * as S$RescriptStruct from "rescript-struct/src/S.bs.mjs";

var variantStruct = S$RescriptStruct.union([
      S$RescriptStruct.literal("One"),
      S$RescriptStruct.literal("Two")
    ]);

Ava("Variant", (function (t) {
        U.assertEqualStructs(t, variantStruct, S$RescriptStruct.union([
                  S$RescriptStruct.literal("One"),
                  S$RescriptStruct.literal("Two")
                ]), undefined, undefined);
      }));

var variantWithSingleItemStruct = S$RescriptStruct.literal("Single");

Ava("Variant with single item becomes a literal struct of the item", (function (t) {
        U.assertEqualStructs(t, variantWithSingleItemStruct, S$RescriptStruct.literal("Single"), undefined, undefined);
      }));

var variantWithAliasStruct = S$RescriptStruct.union([
      S$RescriptStruct.literal("하나"),
      S$RescriptStruct.literal("Two")
    ]);

Ava("Variant with partial @as usage", (function (t) {
        U.assertEqualStructs(t, variantWithAliasStruct, S$RescriptStruct.union([
                  S$RescriptStruct.literal("하나"),
                  S$RescriptStruct.literal("Two")
                ]), undefined, undefined);
      }));

export {
  variantStruct ,
  variantWithSingleItemStruct ,
  variantWithAliasStruct ,
}
/* variantStruct Not a pure module */
