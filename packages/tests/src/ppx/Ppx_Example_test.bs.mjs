// Generated by ReScript, PLEASE EDIT WITH CARE

import * as U from "../utils/U.bs.mjs";
import Ava from "ava";
import * as S$RescriptSchema from "rescript-schema/src/S.bs.mjs";

var ratingSchema = S$RescriptSchema.union([
      S$RescriptSchema.literal("G"),
      S$RescriptSchema.literal("PG"),
      S$RescriptSchema.literal("PG13"),
      S$RescriptSchema.literal("R")
    ]);

var filmSchema = S$RescriptSchema.$$Object.factory(function (s) {
      return {
              Id: s.f("Id", S$RescriptSchema.$$float),
              Title: s.f("Title", S$RescriptSchema.string),
              Tags: s.f("Tags", S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.array(S$RescriptSchema.string)), [])),
              Rating: s.f("Rating", ratingSchema),
              Age: s.f("Age", S$RescriptSchema.deprecate(S$RescriptSchema.option(S$RescriptSchema.$$int), "Use rating instead"))
            };
    });

Ava("Main example", (function (t) {
        U.assertEqualSchemas(t, filmSchema, S$RescriptSchema.object(function (s) {
                  return {
                          Id: s.f("Id", S$RescriptSchema.$$float),
                          Title: s.f("Title", S$RescriptSchema.string),
                          Tags: s.o("Tags", S$RescriptSchema.array(S$RescriptSchema.string), []),
                          Rating: s.f("Rating", S$RescriptSchema.union([
                                    S$RescriptSchema.literal("G"),
                                    S$RescriptSchema.literal("PG"),
                                    S$RescriptSchema.literal("PG13"),
                                    S$RescriptSchema.literal("R")
                                  ])),
                          Age: s.f("Age", S$RescriptSchema.deprecate(S$RescriptSchema.option(S$RescriptSchema.$$int), "Use rating instead"))
                        };
                }), undefined);
      }));

var urlSchema = S$RescriptSchema.$$String.url(S$RescriptSchema.string, undefined);

Ava("@s.matches", (function (t) {
        U.assertEqualSchemas(t, urlSchema, S$RescriptSchema.$$String.url(S$RescriptSchema.string, undefined), undefined);
      }));

var stringWithDefaultSchema = S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.string), "Unknown");

Ava("@s.default", (function (t) {
        U.assertEqualSchemas(t, stringWithDefaultSchema, S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.string), "Unknown"), undefined);
      }));

export {
  ratingSchema ,
  filmSchema ,
  urlSchema ,
  stringWithDefaultSchema ,
}
/* ratingSchema Not a pure module */
