// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../../../../src/S.bs.mjs";
import Ava from "ava";
import * as TestUtils from "../utils/TestUtils.bs.mjs";

var polyStruct = S.union([
      S.literal("one"),
      S.literal("two")
    ]);

Ava("Polymorphic variant", (function (t) {
        TestUtils.assertEqualStructs(t, polyStruct, S.union([
                  S.literal("one"),
                  S.literal("two")
                ]), undefined, undefined);
      }));

var polyWithSingleItemStruct = S.literal("single");

Ava("Polymorphic variant with single item becomes a literal struct of the item", (function (t) {
        TestUtils.assertEqualStructs(t, polyWithSingleItemStruct, S.literal("single"), undefined, undefined);
      }));

var polyWithAliasStruct = S.union([
      S.literal("one"),
      S.literal("two")
    ]);

Ava("Polymorphic variant with partial @as usage", (function (t) {
        TestUtils.assertEqualStructs(t, polyWithAliasStruct, S.union([
                  S.literal("one"),
                  S.literal("two")
                ]), undefined, undefined);
      }));

export {
  polyStruct ,
  polyWithSingleItemStruct ,
  polyWithAliasStruct ,
}
/* polyStruct Not a pure module */
