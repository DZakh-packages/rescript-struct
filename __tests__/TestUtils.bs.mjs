// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function cleanUpStruct(struct) {
  var $$new = {};
  Js_dict.entries(struct).forEach(function (param) {
        var value = param[1];
        var key = param[0];
        switch (key) {
          case "i" :
          case "pb" :
          case "sb" :
              return ;
          default:
            if (typeof value === "object" && value !== null) {
              $$new[key] = cleanUpStruct(value);
            } else {
              $$new[key] = value;
            }
            return ;
        }
      });
  return $$new;
}

function unsafeAssertEqualStructs(t, s1, s2, message, param) {
  t.deepEqual(cleanUpStruct(s1), cleanUpStruct(s2), message !== undefined ? Caml_option.valFromOption(message) : undefined);
}

var assertEqualStructs = unsafeAssertEqualStructs;

export {
  cleanUpStruct ,
  unsafeAssertEqualStructs ,
  assertEqualStructs ,
}
/* No side effect */
